[{"/Users/jani/react-practice/src/index.js":"1","/Users/jani/react-practice/src/Home/Home.js":"2","/Users/jani/react-practice/src/VsSchoolProducts/ProductDisplay.js":"3","/Users/jani/react-practice/src/TypingGame/TypingGame.js":"4","/Users/jani/react-practice/src/Jokes/JokeDisplay2.js":"5","/Users/jani/react-practice/src/Jokes/JokeCard.js":"6","/Users/jani/react-practice/src/Header/Header.js":"7","/Users/jani/react-practice/src/Contact/Form/Form.js":"8","/Users/jani/react-practice/src/StatePractice/StatePractice.js":"9","/Users/jani/react-practice/src/Jokes/JokeDisplay.js":"10"},{"size":185,"mtime":1613145989419,"results":"11","hashOfConfig":"12"},{"size":545,"mtime":1613146203581,"results":"13","hashOfConfig":"12"},{"size":1111,"mtime":1613738491664,"results":"14","hashOfConfig":"12"},{"size":3444,"mtime":1613744682571,"results":"15","hashOfConfig":"12"},{"size":2025,"mtime":1613745484036,"results":"16","hashOfConfig":"12"},{"size":454,"mtime":1613215223087,"results":"17","hashOfConfig":"12"},{"size":2360,"mtime":1613578746320,"results":"18","hashOfConfig":"12"},{"size":4397,"mtime":1613731440592,"results":"19","hashOfConfig":"12"},{"size":4187,"mtime":1613729500120,"results":"20","hashOfConfig":"12"},{"size":1538,"mtime":1613745303744,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jsa9u4",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jani/react-practice/src/index.js",[],"/Users/jani/react-practice/src/Home/Home.js",[],"/Users/jani/react-practice/src/VsSchoolProducts/ProductDisplay.js",[],"/Users/jani/react-practice/src/TypingGame/TypingGame.js",["43"],"import React, { useState, useEffect, useRef } from \"react\"\nimport Header from '../Header/Header'\nimport './StylesTypingGame.css'\n\nfunction TypingGame() {\n\n    const [time, setTime] = useState(10)\n    const [text, setText] = useState(\"\")\n    const [timeRemaining, setTimeRemaining] = useState(time)\n    const [isTimeRunning, setIsTimeRunning] = useState(false)\n    const [wordCount, setWordCount] = useState(0)\n    const [countStyle, setCountStyle] = useState(\"hidden\")\n\n    const textBoxRef = useRef(null)\n\n    function handleChange(e) {\n        const { value } = e.target\n        setText(value)\n    }\n\n    function handleChange2(e) {\n        const tt = e.target.value\n        setTimeRemaining(tt)\n        setWordCount(0)\n        setTime(tt)\n        setCountStyle(\"hidden\")\n        setIsTimeRunning(false)\n        setText(\"\")\n    }\n\n    function calculateWordCount(text) {\n        const wordsArr = text.trim().split(\" \")\n        return wordsArr.filter(word => word !== \"\").length\n    }\n\n    function startGame() {\n        setIsTimeRunning(true)\n        // setTimeRemaining(time)\n        setText(\"\")\n        setWordCount(0)\n        textBoxRef.current.disabled = false\n        textBoxRef.current.focus()\n        setCountStyle(\"hidden\")\n    }\n\n    function endGame() {\n        setIsTimeRunning(false)\n        setWordCount(calculateWordCount(text))\n        setTimeRemaining(0)\n        setCountStyle(null)\n    }\n\n    useEffect(() => {\n        if (isTimeRunning && timeRemaining > 0) {\n            setTimeout(() => {\n                setTimeRemaining(time => time - 1)\n            }, 1000)\n        } else if (timeRemaining === 0) {\n            endGame()\n        }\n    }, [timeRemaining, isTimeRunning])\n\n    return (\n        <div>\n            <Header />\n            <main id='typingCenter'>\n                <h1>How fast do you type?</h1>\n                <br />\n\n         Challenge time in seconds:&nbsp;\n         <input\n                    id='ii'\n                    value={timeRemaining}\n                    type='number'\n                    name='time'\n                    step=\"5\"\n                    min=\"0\"\n                    disabled={isTimeRunning}\n                    onChange={handleChange2}\n                /> &nbsp;\n        <button\n                    id='bb'\n                    onClick={startGame}\n                    disabled={timeRemaining === 0 || isTimeRunning ? true : false}\n                >\n                    Start\n            </button>\n                <h1 className='middle' id={countStyle}>\n                    <span style={{ color: \"white\" }}>{wordCount} </span>\n                words in\n                <span style={{ color: \"white\" }}> {time} </span>\n                seconds !\n                </h1>\n\n                <br />\n                <textarea\n                    ref={textBoxRef}\n                    onChange={handleChange}\n                    value={text}\n                    disabled={!isTimeRunning}\n                    focus={isTimeRunning}\n                />\n            </main>\n            <div style={{textAlign: \"center\"}}>\n                < br />\n                < hr />\n                <p>This is the code:</p>\n            part 1 <br />\n                <img src='Images/typing-1.png' width='720' alt='' />\n\n                <br />part 2<br />\n\n                <img src='Images/typing-2.png' width='720' alt='' />\n\n                <br />\n            </div>\n\n        </div>\n    )\n}\nexport default TypingGame\n","/Users/jani/react-practice/src/Jokes/JokeDisplay2.js",["44","45","46"],"/Users/jani/react-practice/src/Jokes/JokeCard.js",[],"/Users/jani/react-practice/src/Header/Header.js",[],"/Users/jani/react-practice/src/Contact/Form/Form.js",[],"/Users/jani/react-practice/src/StatePractice/StatePractice.js",[],"/Users/jani/react-practice/src/Jokes/JokeDisplay.js",["47","48","49"],{"ruleId":"50","severity":1,"message":"51","line":61,"column":8,"nodeType":"52","endLine":61,"endColumn":38,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":48,"column":9,"nodeType":"56","endLine":48,"endColumn":58},{"ruleId":"54","severity":1,"message":"55","line":51,"column":9,"nodeType":"56","endLine":51,"endColumn":54},{"ruleId":"54","severity":1,"message":"55","line":55,"column":9,"nodeType":"56","endLine":55,"endColumn":55},{"ruleId":"54","severity":1,"message":"55","line":45,"column":9,"nodeType":"56","endLine":45,"endColumn":58},{"ruleId":"54","severity":1,"message":"55","line":48,"column":9,"nodeType":"56","endLine":48,"endColumn":54},{"ruleId":"54","severity":1,"message":"55","line":52,"column":9,"nodeType":"56","endLine":52,"endColumn":55},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'endGame'. Either include it or remove the dependency array.","ArrayExpression",["57"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"58","fix":"59"},"Update the dependencies array to be: [timeRemaining, isTimeRunning, endGame]",{"range":"60","text":"61"},[1664,1694],"[timeRemaining, isTimeRunning, endGame]"]